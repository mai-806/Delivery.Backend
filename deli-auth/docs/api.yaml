openapi: 3.0.3
info:
  title: Authentication API
  description:
    API for register, login and logout users
  version: 1.0.0
#servers:
  #- url: https://url.ru/v1/
tags:
  - name: auth
    #description:
security:
  - bearerAuth: []
paths:
  /v1/auth/register:
    post:
      tags:
        - auth
      summary: Creating a new user
      description: User registration in the service
      parameters:
        - in: header
          name: password
          schema:
            type: string
            format: password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '200':
          description: Success responce
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse200'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/auth/login:
    post:
      tags:
        - auth
      summary: Authorization user
      description: Authorization user in the server
      parameters:
        - in: header
          name: password
          schema:
            type: string
            format: password
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: Success authorization
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse200'
          headers:
            tokens:
              description: Info about access token
              schema:
                $ref: '#/components/schemas/TokenDto'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: User not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'




components:
  schemas:
    UserType:
      type: string
      enum:
        - customer
        - courier
        - admin
      default: customer
      description: "type of user: customer, courier or admin"
    TokenDto:
      properties:
        access_token:
          type: string
          description: ""
        refresh_token:
          type: string
          description: ""
        expires_in:
          type: integer
          description: access token validity period
        token_type:
          type: string
          default: "bearer"
      required:
        - access_token
        - refresh_token
        - expires_in
    RegisterRequest:
      type: object
      description: password on header
      properties:
        login:
          type: string
          description: unique user name
        userType:
          $ref: '#/components/schemas/UserType'
      required:
        - login
        - userType
    AuthRequest:
      type: object
      description: schema for authorization, password in header
      properties:
        login:
          type: string
          description: unique user name
      required:
        - login
    PostResponse200:
      title: RegisterSuccessResponse
      type: object
      properties:
        id:
          type: integer
      required:
        - id
    AuthResponse200:
      title: AuthSuccessResponse
      type: object
      properties:
        isAuth:
          type: boolean
      required:
        - isAuth

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        err_code:
          type: integer
          minimum: 0
      required:
        - message
        - err_code
  securitySchemes:
    bearerAuth:
      type: http  # возможно стоит использовать oauth2, но нужно ли оно нам?
      scheme: bearer
      bearerFormat: JWT
