openapi: 3.0.3
info:
    title: MAIN API
    description:
        "API for make and setup orders"
    version: 1.0.0
    #servers:
    #- url: https://url.ru/v1/

tags:
    -   name: main

paths:
    /v1/courier:
        get:
            summary: Get all information about a courier
            parameters:
                -   name: id
                    in: query
                    schema:
                        type: integer
                        minimum: 0
                    required: true
            
            responses:
                '200':
                    description: Returns login of the courier and id of orders which he accepted
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CourierInfo'
                '404':
                    description: Courier not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    
    /v1/courier/assign:
        post:
            description: This method connects the order and the courier with each other
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/ConnectOrderAndCourierRequest'
                required: true
            
            responses:
                '204':
                    description: Successful operation
                '400':
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: No found order or courier
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    
    /v1/couriers/available:
        get:
            description: Get array of IDs of all available couriers
            parameters:
                -   name: limit
                    in: query
                    description: Maximum number of couriers in response.
                    schema:
                        type: integer
                        minimum: 0
                        default: 10
                    required: false
                    
                -   name: off
                    in: query
                    description: Number of couriers to skip.
                    schema:
                        type: integer
                        minimum: 0
                        default: 0
                    required: false
                
            responses:
                '200':
                    description: Returns array with couriers ID who are available
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetAvailableCouriersResponse'
                    
                '400':
                    description: Invalid Input
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    
    /v1/order:
        get:
            parameters:
                -   name: id
                    in: query
                    schema:
                        type: integer
                        minimum: 0
                        description: Identifier for order
                    required: true
            
            responses:
                '200':
                    description: Success. Information about order route.
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrderDto'
                
                '404':
                    description: Order not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
        
        post:
            tags:
                - order
            description: Adding a new order by courier ID and start-finish points
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrderCreationRequest'
            responses:
                '200':
                    description: Returns ID of new order
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/OrderId'
                '400':
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    
    /v1/order/change-status:
        post:
            description: Change order status
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/OrderChangeStatus'
            responses:
                '204':
                    description: OK
                '400':
                    description: Invalid value
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
                '404':
                    description: Order not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    
    
    /v1/orders:
        get:
            description: Get order ids.
            parameters:
                -   name: limit
                    in: query
                    description: Maximum number of orders in response.
                    schema:
                        type: integer
                        minimum: 0
                        default: 10
                    required: false
                
                -   name: offset
                    in: query
                    description: Number of orders to skip.
                    schema:
                        type: integer
                        minimum: 0
                        default: 0
                    required: false
            
            responses:
                '200':
                    description: Returns array of orders with full info about each
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetOrdersResponse'
                
                '400':
                    description: Wrong limit or offset parameters
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'

components:
    schemas:
        CourierInfo:
            type: object
            properties:
                login:
                    type: string
                orders_id:
                    type: array
                    items:
                        type: integer
                        minimum: 0
                    description: All orders of this courier (only ID)
            required:
                - login
                - orders_id
        
        GetAvailableCouriersResponse:
            type: object
            properties:
                courier_ids:
                    type: array
                    items:
                        type: integer
                        minimum: 0
        
        Coordinate:
            type: object
            properties:
                lon:
                    type: number
                    maximum: 180
                    minimum: -180
                    description: City geographic location (longitude)
                
                lat:
                    type: number
                    maximum: 90
                    minimum: -90
                    description: City geographic location (latitude)
            required:
                - lon
                - lat
        
        OrderDto:
            type: object
            properties:
                id:
                    type: integer
                    
                customerId:
                    type: integer
                    minimum: 0
                    example: 1
                start:
                    $ref: '#/components/schemas/Coordinate'
                finish:
                    $ref: '#/components/schemas/Coordinate'
                status:
                    type: string
                    enum: [ new, waiting, in_progress, done, canceled ]
            required:
                - id
                - start
                - finish
                - customerId
                - status
        
        GetOrdersResponse:
            type: object
            properties:
                orders:
                    type: array
                    description: Array with full info about orders
                    items:
                        $ref: '#/components/schemas/OrderDto'
        
        OrderCreationRequest:
            type: object
            properties:
                customerId:
                    type: integer
                    minimum: 0
                start:
                    $ref: '#/components/schemas/Coordinate'
                finish:
                    $ref: '#/components/schemas/Coordinate'
            required:
                - start
                - finish
                - customerId
        
        OrderId:
            type: object
            properties:
                orderId:
                    type: integer
                    minimum: 0
            required:
                - orderId
        
        ConnectOrderAndCourierRequest:
            type: object
            properties:
                orderId:
                    type: integer
                    minimum: 0
                courierId:
                    type: integer
                    minimum: 0
            required:
                - orderId
                - courierId
        
        OrderChangeStatus:
            type: object
            properties:
                orderId:
                    type: integer
                    minimum: 0
                status:
                    type: string
                    enum: [ in_progress, delivered, canceled ]
            required:
                - orderId
                - status
        
        ErrorResponse:
            type: object
            properties:
                message:
                    type: string
            required:
                - message
