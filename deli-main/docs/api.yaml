openapi: 3.0.3

info:
  version: 1.0.0
  title: Delivery API
  description: API to interact with delivery orders

  #servers:
  # - url: https://url.ru/

paths:
  /v1/courier:
    get:
      summary: Get all information about a courier
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
            description: Identifier for order
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CourierInfo'
        '404':
          description: Courier not found
          content:
            application/json:
              schema:
                title: Courier not found
                $ref: '#/components/schemas/ErrorResponse'
  /v1/order:
    get:
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
            description: Identifier for order

      responses:
        '200':
          description: Success. Information about order route.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDto'

        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    post:
      tags:
        - order
      summary: Add a new order
      description: Add a new order
      operationId: addOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderId'
        '400':
          description: Invalid value
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /v1/orders:
    get:
      operationId: getCouriers
      description: Get order ids.
      parameters:
        - name: limit
          in: query
          required: false
          description: Maximum number of orders in response.
          schema:
            type: integer
            minimum: 0
            default: 10

        - name: offset
          in: query
          required: false
          description: Number of orders to skip.
          schema:
            type: integer
            minimum: 0
            default: 0

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'

        '400':
          description: Wrong limit or offset parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/couriers/available:
    get:
      summary: Get array of IDs of all available couriers
      parameters:
        - name: limit
          in: query
          required: false
          description: Maximum number of couriers in response.
          schema:
            type: integer
            minimum: 0
            default: 10

        - name: offset
          in: query
          required: false
          description: Number of couriers to skip.
          schema:
            type: integer
            minimum: 0
            default: 0

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAvailableCouriersResponse'

        '400':
          description: Wrong limit or offset parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'



components:
  schemas:
    CourierInfo:
      type: object
      properties:
        id:
          type: integer
          description: Courier ID
        login:
          type: string
          description: Courier login
        orders_id:
          type: array
          items:
            type: integer
            minimum: 0
          description: Courier orders
      required:
        - id
        - login
        - orders_id

    GetAvailableCouriersResponse:
      type: object
      properties:
        courier_ids:
          type: array
          items:
            type: integer

    Coordinate:
      type: object
      properties:
        lon:
          type: number
          maximum: 180
          minimum: -180
          description: City geographic location (longitude)

        lat:
          type: number
          maximum: 90
          minimum: -90
          description: City geographic location (latitude)
      required:
        - lon
        - lat

    OrderDto:
      type: object
      properties:
        id:
          type: integer
        start:
          $ref: '#/components/schemas/Coordinate'
        finish:
          $ref: '#/components/schemas/Coordinate'
        status:
          type: string
          enum: [new, waiting, in_progress, done]

      required:
        - start
        - finish
        - status
        - id

    GetOrdersResponse:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/OrderDto'

    OrderId:
      required:
        - orderId
      type: object
      properties:
        orderId:
          type: integer
          minimum: 0
          example: 1

    Order:
      required:
        - orderId
        - customerId
        - latitude
        - longitude
      type: object
      properties:
        orderId:
          type: integer
          minimum: 0
          example: 1
        customerId:
          type: integer
          minimum: 0
          example: 1
        latitude:
          type: number
          minimum: -180
          maximum: 180
          example: 90.3131
        longitude:
          type: number
          minimum: -180
          maximum: 180
          example: -30.301

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
        err_code:
          type: integer
          minimum: 0
      required:
        - message
        - err_code
 